<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd"
        >
<mapper namespace="com.example.demo.mapper.MMember">
    <select id="selectAll" resultType="Member">
        SELECT m.ID,
               m.NAME,
               m.EMAIL
          FROM MEMBER m
    </select>

    <select id="selectById" resultType="Member">
        SELECT *
          FROM MEMBER m
         WHERE m.ID = #{id}
    </select>

    <select id="selectByType" resultType="Member">
        SELECT *
          FROM MEMBER m
          <where>
            <if test="id != null and id != 0">
              AND m.ID = #{id}
            </if>
            <if test="name != null and name != ''">
              AND m.NAME = #{name}
            </if>
            <if test="birthday != null and birthday != ''">
              AND m.BIRTHDAY = #{birthday}
            </if>
            <if test="email != null and email != ''">
              AND m.EMAIL = #{email}
            </if>
        </where>
    </select>
    <!--
        choose when otherwise
        switch 문과 비슷한 기능으로 when은 case에 해당하며, otherwise는 default에 해당한다.
     -->
    <select id="selectByChoose" resultType="Member">
        SELECT *
          FROM MEMBER m WHERE
          <choose>
              <when test="name != null and name != ''">
                m.NAME = #{name}
              </when>
              <when test="birthday != null and birthday != ''">
                m.BIRTHDAY = #{birthday}
              </when>
              <when test="email != null and email != ''">
                m.EMAIL = #{email}
              </when>
              <otherwise>
                m.ID = #{id}
              </otherwise>
          </choose>
    </select>

    <select id="selectByList" resultType="Member">
        SELECT *
          FROM MEMBER m
         WHERE m.ID IN
               <foreach collection="list" item="item"
                        open="(" close=")"
                        separator="," nullable="false"
               >#{item}
               </foreach>
    </select>

    <select id="selectByPage" parameterType="Map" resultType="Member">
        SELECT *
          FROM ${param.getClass().getSimpleName().toUpperCase()} m
          <if test="param != null">
              <where>
                  <if test="param.name != null and param.name != ''">
                    AND m.NAME LIKE CONCAT('%', #{param.name}, '%')
                  </if>
                  <if test="param.birthday != null and param.birthday != ''">
                    AND m.BIRTHDAY = #{param.birthday}
                  </if>
                  <if test="param.email != null and param.email != ''">
                    AND m.EMAIL = #{param.email}
                  </if>
              </where>
          </if>
          <if test="page != null">
              <if test="page.size != null or page.size != 0">
                  LIMIT #{page.size}
              </if>
              OFFSET #{page.offset}
          </if>
    </select>

    <select id="totalSelect" parameterType="Map" resultType="Integer">
        SELECT COUNT(*)
          FROM MEMBER m
        <if test="param != null">
            <where>
                <if test="param.name != null and param.name != ''">
                    AND m.NAME LIKE CONCAT('%', #{param.name}, '%')
                </if>
                <if test="param.birthday != null and param.birthday != ''">
                    AND m.BIRTHDAY = #{param.birthday}
                </if>
                <if test="param.email != null and param.email != ''">
                    AND m.EMAIL = #{param.email}
                </if>
            </where>
        </if>
    </select>




    <insert id="insert" parameterType="Member">
        INSERT INTO MEMBER
               (NAME, BIRTHDAY, EMAIL, ADDRESS)
        VALUES (#{name}, #{birthday}, #{email}, #{address})
    </insert>

    <insert id="insertByList" parameterType="List">
        INSERT INTO MEMBER
               (NAME, BIRTHDAY, EMAIL, ADDRESS)
        VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.name}, #{item.birthday}, #{item.email}, #{item.address})
        </foreach>
    </insert>

    <update id="updateById" parameterType="Member">
        UPDATE MEMBER
        <set>
            <if test="name != null and name != ''">
              NAME = #{name},
            </if>
            <if test="birthday != null and birthday != ''">
              BIRTHDAY = #{birthday},
            </if>
            <if test="email != null and email != ''">
              EMAIL = #{email},
            </if>
            <if test="address != null and address != ''">
              ADDRESS = #{address}
            </if>
        </set>
         WHERE ID = #{id}
    </update>

    <update id="updateByList" parameterType="List">
        <foreach collection="list" item="member" separator=";">
            UPDATE MEMBER
            <set>
                <if test="member.name != null">
                  NAME = #{member.name},
                </if>
                <if test="member.birthday != null">
                  BIRTHDAY = #{member.birthday},
                </if>
                <if test="member.email != null">
                  EMAIL = #{member.email},
                </if>
                <if test="member.address != null">
                  ADDRESS = #{member.address}
                </if>
            </set>
             WHERE ID = #{member.id}
        </foreach>
    </update>

    <delete id="deleteById" parameterType="long">
        DELETE
          FROM MEMBER
         WHERE ID = #{id}
    </delete>

    <!-- Mapper에서 2차 캐시 설정 방법 -->
<!--    <cache flushInterval="2000" size="512000"  />-->
</mapper>